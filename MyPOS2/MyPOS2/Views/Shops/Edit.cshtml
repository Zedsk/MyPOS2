@*@model MyPOS2.Data.Entity.SHOP*@
@model MyPOS2.Models.management.ShopViewModel

@{
    ViewBag.Title = "Edit";
}

@section Styles {
    <link href="@Url.Content("~/Content/pos2.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{
    <script src="@Url.Content("~/Scripts/pos2.js")" type="text/javascript"></script>
}

<h2>Editer</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 id="sourceName">Magasin</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Shop.idShop)

        <div class="form-group">
            @Html.LabelFor(model => model.Shop.logoShop, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.path != null)
                {
                    <img id="imgLogo" src="@Url.Content(ViewBag.path)" alt="Logo du magasin" class="imgIndex" />
                }
                else
                {
                    if (Model.Shop.logoShop != null)
                    {
                        <img id="imgLogo" src="@Url.Content(Model.Shop.logoShop)" alt="Logo du magasin" class="imgIndex" />
                    }
                    else
                    {
                        <img id="imgLogo" src="~/Content/image/logo_noImage.png" alt="Pas d'image" class="imgIndex" />
                    }

                }

                @Html.HiddenFor(model => model.Shop.logoShop)
                @Html.ValidationMessageFor(model => model.Shop.logoShop, "", new { @class = "text-danger" })
                <input type="file" id="newImage" name="newImage" />
                <button type="button" class="btn btn-default" value="" onclick="ImportImage()">
                    <span class="glyphicon glyphicon-download-alt"></span> Modifier
                </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shop.phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Shop.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shop.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shop.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Shop.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shop.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shop.zipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Shop.zipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shop.zipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
                @Html.LabelFor(model => model.NameShop, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (!ViewBag.isUniversal)
                {
                    for (int i = 0; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].nameShop, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                        </div>
                        <br />
                    }
                }
                else
                {
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.ShopsTrans[0].shopId)
                        @Html.EditorFor(model => model.ShopsTrans[0].nameShop, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                        <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                        @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

                    </div>
                    <br />
                    for (int i = 1; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].nameShop, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })
                        </div>
                        <br />
                    }
                }

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (!ViewBag.isUniversal)
                {
                    for (int i = 0; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].street, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                        </div>
                        <br />
                    }
                }
                else
                {
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.ShopsTrans[0].shopId)
                        @Html.EditorFor(model => model.ShopsTrans[0].street, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                        <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                        @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

                    </div>
                    <br />
                    for (int i = 1; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].street, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })
                        </div>
                        <br />
                    }
                }

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (!ViewBag.isUniversal)
                {
                    for (int i = 0; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].city, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                        </div>
                        <br />
                    }
                }
                else
                {
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.ShopsTrans[0].shopId)
                        @Html.EditorFor(model => model.ShopsTrans[0].city, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                        <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                        @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

                    </div>
                    <br />
                    for (int i = 1; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].city, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })
                        </div>
                        <br />
                    }
                }

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Opening, htmlAttributes: new { @class = "control-label col-md-2" })
                @if (!ViewBag.isUniversal)
                {
                    for (int i = 0; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].opening, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                        </div>
                        <br />
                    }
                }
                else
                {
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.ShopsTrans[0].shopId)
                        @Html.EditorFor(model => model.ShopsTrans[0].opening, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                        <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                        @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

                    </div>
                    <br />
                    for (int i = 1; i < Model.ListLang.Count(); i++)
                    {
                        <div class="col-md-2">
                            @Html.HiddenFor(model => model.ShopsTrans[i].shopId, new { @Value = Model.Shop.idShop })
                            @Html.EditorFor(model => model.ShopsTrans[i].opening, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                            @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                            @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })
                        </div>
                        <br />
                    }
                }

            </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sauver" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="detail">
    @Html.Partial("_PartialImageName")
</div>

<div>
    @Html.ActionLink("Retour à la Liste", "Index")
</div>
