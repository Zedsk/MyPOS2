@*@model MyPOS2.Data.Entity.SHOP*@
@model MyPOS2.Models.management.ShopViewModel

@{
    ViewBag.Title = "Create";
}

@section Styles {
    <link href="@Url.Content("~/Content/pos2.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{
    <script src="@Url.Content("~/Scripts/pos2.js")" type="text/javascript"></script>
}

<h2>Créer</h2>
@*@using (Html.BeginForm("Create", "Shops", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "validateFormTranslation()" }))*@
@*@using (Html.BeginForm(new { id = "theForm" }))*@
@using (Html.BeginForm("Create", "Shops", FormMethod.Post, new { enctype = "multipart/form-data", id = "theForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 id="sourceName">Magasin</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <span id="errorValidation" class="text-danger" style=" visibility:hidden"></span>
        <div class="form-group">
            @Html.LabelFor(model => model.LogoShop, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @if (ViewBag.path != null)
                {
                    <img id="imgLogo" src="@Url.Content(ViewBag.path)" alt="Logo du magasin" class="imgIndex" />
                }
                else
                {
                    <img id="imgLogo" src="~/Content/image/logo_noImage.png" alt="Pas d'image" class="imgIndex" />
                }
                @*@Html.EditorFor(model => model.ImageHero, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.path } })*@
                @Html.HiddenFor(model => model.LogoShop, new { htmlAttributes = new { @Value = ViewBag.path } })
                @Html.ValidationMessageFor(model => model.LogoShop, "", new { @class = "text-danger" })
                <input type="file" id="newImage" name="newImage" />
                <button type="button" class="btn btn-default" value="" onclick="ImportImage()">
                    <span class="glyphicon glyphicon-download-alt"></span> Importer
                </button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameShop, htmlAttributes: new { @class = "control-label col-md-2" })
            <span style="color: red; font-weight: bold">@ViewBag.nameIsNotValid</span>

            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.ShopsTrans[0].shopId)*@
                @Html.EditorFor(model => model.ShopsTrans[0].nameShop, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

            </div>
            <br />
            @for (int i = 1; i < Model.ListLang.Count(); i++)
            {
                <div class="col-md-2">
                    @*@Html.HiddenFor(model => model.ShopsTrans[i].shopId)*@
                    @Html.EditorFor(model => model.ShopsTrans[i].nameShop, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                    @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                </div>
                <br />
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <span style="color: red; font-weight: bold">@ViewBag.nameIsNotValid</span>

            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.ShopsTrans[0].shopId)*@
                @Html.EditorFor(model => model.ShopsTrans[0].street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

            </div>
            <br />
            @for (int i = 1; i < Model.ListLang.Count(); i++)
            {
                <div class="col-md-2">
                    @*@Html.HiddenFor(model => model.ShopsTrans[i].shopId)*@
                    @Html.EditorFor(model => model.ShopsTrans[i].street, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                    @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                </div>
                <br />
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <span style="color: red; font-weight: bold">@ViewBag.nameIsNotValid</span>

            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.ShopsTrans[0].shopId)*@
                @Html.EditorFor(model => model.ShopsTrans[0].city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

            </div>
            <br />
            @for (int i = 1; i < Model.ListLang.Count(); i++)
            {
                <div class="col-md-2">
                    @*@Html.HiddenFor(model => model.ShopsTrans[i].shopId)*@
                    @Html.EditorFor(model => model.ShopsTrans[i].city, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                    @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                </div>
                <br />
            }
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opening, htmlAttributes: new { @class = "control-label col-md-2" })
            <span style="color: red; font-weight: bold">@ViewBag.nameIsNotValid</span>

            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.ShopsTrans[0].shopId)*@
                @Html.EditorFor(model => model.ShopsTrans[0].opening, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShopsTrans, "", new { @class = "text-danger" })

                <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

                @Html.HiddenFor(m => m.ShopsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

            </div>
            <br />

            @for (int i = 1; i < Model.ListLang.Count(); i++)
            {
                <div class="col-md-2">
                    @*@Html.HiddenFor(model => model.ShopsTrans[i].shopId)*@
                    @Html.EditorFor(model => model.ShopsTrans[i].opening, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                    @Html.HiddenFor(m => m.ShopsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

                </div>
                <br />
            }
        </div>
        <span id="counter" style="visibility:hidden">@Model.ListLang.Count()</span>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <!-- no submit input because don't work with js validation => change to button type and form needs id-->
                @*<input type="submit" value="Créer" class="btn btn-default" />*@
                <input type="button" value="Créer" class="btn btn-default" onclick="validateFormTranslation()" />
            </div>
        </div>
    </div>
}

<div id="detail">
    @Html.Partial("_PartialImageName")
</div>

<div>
    @Html.ActionLink("Retour à la Liste", "Index")
</div>
