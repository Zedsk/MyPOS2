@*@model MyPOS2.Data.Entity.PRODUCT*@
@model MyPOS2.Models.management.ProductViewModel

@{
    ViewBag.Title = "Create";
}

@section Styles {
    <link href="@Url.Content("~/Content/pos2.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{
    <script src="@Url.Content("~/Scripts/pos2.js")" type="text/javascript"></script>
}

<h2>Créer</h2>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data", id = "theForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 id="sourceName">Article</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ImageProduct, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @if (ViewBag.path != null)
            {
                <img id="imgLogo" src="@Url.Content(ViewBag.path)" alt="Image du produit" class="imgIndex" />
            }
            else
            {
                <img id="imgLogo" src="~/Content/image/logo_noImage.png" alt="Pas d'image" class="imgIndex" />
            }
            @Html.HiddenFor(model => model.ImageProduct, new { htmlAttributes = new { @Value = ViewBag.path } })
            @Html.ValidationMessageFor(model => model.ImageProduct, "", new { @class = "text-danger" })
            <input type="file" id="newImage" name="newImage" />
            <button type="button" class="btn btn-default" value="" onclick="ImportImage()">
                <span class="glyphicon glyphicon-download-alt"></span> Importer
            </button>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("categoryId", null, htmlAttributes: new { @class = "form-control" })*@
            @Html.DropDownListFor(l => l.Category, new SelectList(Model.CategoriesTrans, "categoryId", "nameCategory"), "Choix de la Catégorie", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(l => l.Age, new SelectList(Model.Ages, "idAge", "rangeAges"), "Choix de la tranche d'age", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(l => l.Brand, new SelectList(Model.Brands, "idBrand", "nameBrand"), "Choix de la marque", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(l => l.Hero, new SelectList(Model.HeroesTrans, "heroId", "nameHero"), "Choix du héro", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Hero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Vat, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@{
            //to do --> change Diplay Vat 21%
            var tva = "21%";
            <span>@tva</span>
        }
            <span style="visibility:hidden">
                @Html.DropDownListFor(l => l.Vat, new SelectList(Model.Vats, "idVat", "appliedVat"), "Choix de la TVA", htmlAttributes: new { @class = "form-control" })
            </span>*@

            @Html.DropDownListFor(l => l.Vat, new SelectList(Model.Vats, "idVat", "appliedVat"), "Choix de la TVA", htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.ProductTrans.nameProduct, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label class = "control-label col-md-2">Nom</label>
        <span style="color: red; font-weight: bold">@ViewBag.nameIsNotValid</span>

        <div class="col-md-2">
            @*@Html.HiddenFor(model => model.ShopsTrans[0].shopId)*@
            @Html.EditorFor(model => model.ProductsTrans[0].nameProduct, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductsTrans, "", new { @class = "text-danger" })

            <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

            @Html.HiddenFor(m => m.ProductsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

        </div>
        <br />
        @for (int i = 1; i < Model.ListLang.Count(); i++)
        {
            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.ShopsTrans[i].shopId)*@
                @Html.EditorFor(model => model.ProductsTrans[i].nameProduct, new { htmlAttributes = new { @class = "form-control" } })

                @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                @Html.HiddenFor(m => m.ProductsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

            </div>
            <br />
        }
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.ProductTrans.description, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <label class="control-label col-md-2">Description</label>
        <span style="color: red; font-weight: bold">@ViewBag.nameIsNotValid</span>

        <div class="col-md-2">
            @*@Html.HiddenFor(model => model.ShopsTrans[0].shopId)*@
            @Html.TextAreaFor(model => model.ProductsTrans[0].description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductsTrans, "", new { @class = "text-danger" })

            <label>Universel ou @Html.DisplayFor(m => m.ListLang[0].nameLanguage)</label>

            @Html.HiddenFor(m => m.ProductsTrans[0].languageId, new { @Value = Model.ListLang[0].idLanguage })

        </div>
        <br />
        @for (int i = 1; i < Model.ListLang.Count(); i++)
        {
            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.ShopsTrans[i].shopId)*@
                @Html.TextAreaFor(model => model.ProductsTrans[i].description, new { htmlAttributes = new { @class = "form-control" } })

                @Html.DisplayFor(m => m.ListLang[i].nameLanguage)

                @Html.HiddenFor(m => m.ProductsTrans[i].languageId, new { @Value = Model.ListLang[i].idLanguage })

            </div>
            <br />
        }
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Créer" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div id="detail">
    @Html.Partial("_PartialImageName")
</div>
<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>
